{"ast":null,"code":"var _jsxFileName = \"/Users/chizama/week1/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { Map, CircleMarker, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: [],\n      lat: [],\n      long: [],\n      address: [],\n      price: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+Charlottesville&opennow&key=\" + API_KEY).then(res => {\n      let restaurants = res.data.results;\n      var lat = restaurants.map(latitude => latitude.geometry.location.lat);\n      console.log(lat);\n      var long = restaurants.map(longitude => longitude.geometry.location.lng);\n      console.log(long);\n      var theName = restaurants.map(name => name.name);\n      console.log(theName);\n      var price = restaurants.map(thePrice => thePrice.price_level);\n      console.log(price);\n      var address = restaurants.map(theAddress => theAddress.formatted_address);\n      console.log(address);\n      this.setState({\n        name: theName,\n        lat: lat,\n        long: long,\n        address: address\n      });\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    console.log(this.state.name);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.restaurants.map(maps => React.createElement(\"li\", {\n      key: maps.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" \", maps.address, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, maps.price))))), React.createElement(\"footer\", {\n      className: \"Map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Map, {\n      style: {\n        height: \"300px\",\n        width: \"150%\"\n      },\n      zoom: 1,\n      center: [-0.09, 51.505],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(CircleMarker, {\n      center: [32.0983, -0.09],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/chizama/week1/src/App.js"],"names":["React","axios","Map","CircleMarker","TileLayer","API_KEY","process","env","REACT_APP_API_KEY","App","Component","state","name","lat","long","address","price","componentDidMount","get","then","res","restaurants","data","results","map","latitude","geometry","location","console","log","longitude","lng","theName","thePrice","price_level","theAddress","formatted_address","setState","render","maps","id","height","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { Map, CircleMarker, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nexport default class App extends React.Component {\n  state = { name: [], lat: [], long: [], address: [], price: [] };\n\n  componentDidMount() {\n    axios\n      .get(\n        \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+Charlottesville&opennow&key=\" +\n        API_KEY\n      )\n      .then(res => {\n        let restaurants = res.data.results;\n\n        var lat = restaurants.map(latitude => latitude.geometry.location.lat);\n        console.log(lat);\n\n\n\n        var long = restaurants.map(longitude => longitude.geometry.location.lng);\n        console.log(long);\n\n        var theName = restaurants.map(name => name.name);\n        console.log(theName);\n\n        var price = restaurants.map(thePrice => thePrice.price_level);\n        console.log(price);\n\n        var address = restaurants.map(theAddress => theAddress.formatted_address);\n        console.log(address);\n\n        this.setState({\n          name: theName,\n          lat: lat,\n          long: long,\n          address: address\n        });\n        console.log(this.state);\n      });\n  }\n  render() {\n    console.log(this.state.name);\n    return (\n      <div>\n        <ul>\n          {this.state.restaurants.map(maps => (\n            <li key={maps.id}>\n              <li> {maps.address}\n                <ul>{maps.price}</ul>\n              </li>\n            </li>\n\n          ))}\n        </ul>\n\n\n\n        <footer className=\"Map\">\n          <Map\n            style={{ height: \"300px\", width: \"150%\" }}\n            zoom={1}\n            center={[-0.09, 51.505]}>\n            <TileLayer url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n            <CircleMarker center={[32.0983, -0.09]} />\n\n\n          </Map>\n        </footer>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}